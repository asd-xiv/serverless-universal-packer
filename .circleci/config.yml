version: 2.1

# Executors - https://circleci.com/docs/2.0/executor-intro/
#
# The underlying technology or environment in which to run a job

executors:
  gitleaks:
    docker:
      - image: zricethezav/gitleaks:latest
  node-lts:
    docker:
      - image: cimg/node:lts

# Commands - https://circleci.com/docs/2.0/configuration-reference/#commands
#
# A command defines a sequence of steps as a map to be executed in a job,
# enabling you to reuse a single command definition across multiple jobs

commands:
  restore-cache-node_modules:
    steps:
      - restore_cache:
          name: "[cache] Restore \"node_modules\""
          keys:
            - &CACHE-KEY-NODE_MODULES v1-node_modules-{{ checksum "package-lock.json" }}
            - v1-node_modules-
  save-cache-node_modules:
    steps:
      - save_cache:
          name: "[cache] Save \"node_modules\""
          key: *CACHE-KEY-NODE_MODULES
          paths:
            - node_modules
  restore-cache-npm:
    steps:
      - restore_cache:
          name: "[cache] Restore \".npm\""
          keys:
            - &CACHE-KEY-NPM v1-npm-{{ checksum "package-lock.json" }}
            - v1-npm-
  save-cache-npm:
    steps:
      - save_cache:
          name: "[cache] Save \".npm\""
          key: *CACHE-KEY-NPM
          paths:
            - .npm

# Jobs - https://circleci.com/docs/2.0/configuration-reference/#jobs
#
# Atomic parts of the pipeline that will be composed and configured in one or
# more Workflows

jobs:
  detect-secrets:
    executor: gitleaks
    steps:
      - checkout
      - run:
          name: "[gitleaks] Detect secrets in repository history"
          command: gitleaks detect --redact --verbose

  setup:
    executor: node-lts
    steps:
      - checkout
      - restore-cache-node_modules
      - restore-cache-npm
      - run:
          name: "[npm] Install packages"
          command: |
            node -v && npm -v
            npm run setup
      - save-cache-node_modules
      - save-cache-npm

  test:
    executor: node-lts
    steps:
      - checkout
      - restore-cache-node_modules
      - run:
          name: "[tape, c8] Unit tests with coverage"
          command: npm run test.coverage

  typecheck:
    executor: node-lts
    steps:
      - checkout
      - restore-cache-node_modules
      - run:
          name: "[tsc] Typecheck"
          command: npm run typecheck

  lint:
    executor: node-lts
    steps:
      - checkout
      - restore-cache-node_modules
      - run:
          name: "[eslint, markdownlint] Lint"
          command: npm run lint

  # Required env vars:
  #  - GITHUB_TOKEN: needs access to create a tag, release and commit version
  #  changes to package.json and package-lock.json
  #  - NPM_TOKEN: needs access to publish to npm
  release-npm:
    executor: node-lts
    steps:
      - checkout
      - restore-cache-node_modules
      - run:
          name:
            "[semantic-release] Update version, generate release, publish npm
            package"
          command: npm run release

  # Required env vars:
  # - COVERALLS_REPO_TOKEN: access token to submit data to coveralls.io
  submit-coverage:
    executor: node-lts
    steps:
      - checkout
      - restore-cache-node_modules
      - run:
          name: "[c8, coveralls] Publish test coverage to COVERALLS"
          command: npm run test.coverage-submit

# Workflows - https://circleci.com/docs/2.0/workflows/
#
# Treat workflows as a jobs/commands pipe:
# cmd1 -p1 lorem | cmd2 -foo bar | ... | cmdN)

workflows:
  release:
    jobs:
      - detect-secrets:
          filters:
            branches:
              only: [main]
      - setup:
          requires: [detect-secrets]
      - test:
          requires: [setup]
      - typecheck:
          requires: [setup]
      - lint:
          requires: [setup]
      - release-npm:
          requires: [test, typecheck, lint]
          context: ["GitHub Auth", "NPM Auth"]
      - submit-coverage:
          requires: [release-npm]
          context: ["Coveralls - tsd-lite-cli"]

  test-pr:
    jobs:
      - detect-secrets:
          filters:
            branches:
              ignore: [main]
      - setup:
          requires: [detect-secrets]
      - test:
          requires: [setup]
      - typecheck:
          requires: [setup]
      - lint:
          requires: [setup]
